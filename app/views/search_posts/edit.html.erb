<h2>見つかりましたか？</h2>

<%= form_with model: @search_post do |f| %>
  <% if @search_post.errors.any? %>
    <div class="alert alert-danger">
      <h2>保存できませんでした</h2>
      <ul>
        <% @search_post.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <%= f.label :item_name, "探し物" %>
    <%= f.text_field :item_name %>
  </div>

  <div>
    <%= f.label :status, "ステータス" %>
    <%= f.select :status, SearchPost.statuses.keys.map { |w| [I18n.t("activerecord.attributes.search_post.status.#{w}"), w] }, {}, { id: "search_post_status" } %>
  </div>

  <div>
    <%= f.label :found_place, "見つけた場所" %>
    <!-- 入力欄は JS で編集可否を制御 -->
    <%= f.text_field :found_place, id: "search_post_found_place" %>
    <!-- hidden で常に値を送信 -->
    <%= f.hidden_field :found_place, id: "search_post_found_place_hidden" %>
  </div>

  <%= f.submit "更新する" %>
<% end %>

<script>
  document.addEventListener("turbo:render", () => {
    const statusSelect = document.querySelector("#search_post_status");
    const foundPlaceInput = document.querySelector("#search_post_found_place");
    const foundPlaceHidden = document.querySelector("#search_post_found_place_hidden");

    if (!statusSelect || !foundPlaceInput || !foundPlaceHidden) return;

    const toggleFoundPlace = () => {
      if (statusSelect.value === "found") {
        foundPlaceInput.disabled = false;
        foundPlaceHidden.value = foundPlaceInput.value;
      } else {
        foundPlaceInput.disabled = true;
        foundPlaceHidden.value = ""; // ← status が "searching" のときは空にする
      }
    };

    toggleFoundPlace();
    statusSelect.addEventListener("change", toggleFoundPlace);
    foundPlaceInput.addEventListener("input", () => {
      foundPlaceHidden.value = foundPlaceInput.value;
    });
  });
</script>
